package ru.r2cloud.jradio.beesat4;

import static com.google.code.beanmatchers.BeanMatchers.hasValidBeanConstructor;
import static com.google.code.beanmatchers.BeanMatchers.hasValidGettersAndSetters;
import static org.hamcrest.CoreMatchers.allOf;
import static org.hamcrest.MatcherAssert.assertThat;

import java.io.ByteArrayInputStream;
import java.io.DataInputStream;

import org.junit.Test;

import ru.r2cloud.jradio.AssertJson;
import ru.r2cloud.jradio.fec.ViterbiTest;

public class Beesat4BeaconTest {

	@Test
	public void testSuccess() throws Exception {
		byte[] data = ViterbiTest.hexStringToByteArray(
				
		Beesat4Beacon beacon = new Beesat4Beacon();
		beacon.readBeacon(new DataInputStream(new ByteArrayInputStream(data)));
		AssertJson.assertObjectsEqual("Beesat4Beacon.json", beacon);
	}
	
	@Test
	public void testPojo() {
		assertThat(Apid0.class, allOf(hasValidBeanConstructor(), hasValidGettersAndSetters()));
		assertThat(Apid1.class, allOf(hasValidBeanConstructor(), hasValidGettersAndSetters()));
		assertThat(Apid2.class, allOf(hasValidBeanConstructor(), hasValidGettersAndSetters()));
	}
			
}
